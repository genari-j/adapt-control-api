import { z } from 'zod'
import 'dotenv/config'

const envSchema = z.object({
  APP_PORT: z.string().min(1, 'Caracteres nÃ£o informados ğŸ˜•').transform(port => Number(port)),
  APP_SECRET: z.string().min(1, 'Caracteres nÃ£o informados ğŸ˜•'),
  BCRYPT_SALT_ROUNDS: z.string().min(1, 'Caracteres nÃ£o informados ğŸ˜•').transform(salt => Number(salt)),
  URL_FRONTEND: z.string().min(1, 'Caracteres nÃ£o informados ğŸ˜•'),
  HOST_RESET_PSW: z.string().min(1, 'Caracteres nÃ£o informados ğŸ˜•'),
  PORT_RESET_PSW: z.string().min(1, 'Caracteres nÃ£o informados ğŸ˜•').transform(port => Number(port)),
  EMAIL_RESET_PSW: z.string().min(1, 'Caracteres nÃ£o informados ğŸ˜•'),
  PSW_RESET_PSW: z.string().min(1, 'Caracteres nÃ£o informados ğŸ˜•'),
  EXP_RESET_PSW: z.string().min(1, 'Caracteres nÃ£o informados ğŸ˜•'),
  INITIAL_DATA_OFFSET: z.string().min(1, 'Caracteres nÃ£o informados ğŸ˜•').transform(data => Number(data)),
  LIST_PER_PAGE: z.string().min(1, 'Caracteres nÃ£o informados ğŸ˜•').transform(data => Number(data)),
  DATABASE_URL: z.string().min(1, 'Caracteres nÃ£o informados ğŸ˜•'),
})

const _env = envSchema.safeParse(process.env)

if (_env.success === false) {
  console.error('ğŸ’¬ Ops, ocorreu algum erro relacionado a variÃ¡veis de ambiente.', _env.error.format())
  throw new Error('ğŸ’¬ VariÃ¡veis de ambiente invÃ¡lidas.')
}

export const env = _env.data